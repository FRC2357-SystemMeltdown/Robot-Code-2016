// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"



// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveControllerRightSideMotors;
std::shared_ptr<SpeedController> RobotMap::driveControllerLeftSideMotors;
std::shared_ptr<RobotDrive> RobotMap::driveControllerRobotDrive21;
std::shared_ptr<DigitalInput> RobotMap::launchControllerlowLimit;
std::shared_ptr<CANTalon> RobotMap::launchControllerWheelsTop;
std::shared_ptr<CANTalon> RobotMap::launchControllerWheelsBot;
std::shared_ptr<Relay> RobotMap::triggerControllertrigger;
std::shared_ptr<Servo> RobotMap::pixyControllerPixyPan;
std::shared_ptr<CANTalon> RobotMap::elevatorControllerWindowL;
std::shared_ptr<CANTalon> RobotMap::elevatorControllerWindowR;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION


void RobotMap::init() {
	//TODO IFF we rebuild code from RB (which we will), change CAN ID's in RB to reflect 0 as Bot shooters and 1 as Top shooters.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveControllerRightSideMotors.reset(new Talon(9));
    lw->AddActuator("DriveController", "RightSideMotors", std::static_pointer_cast<Talon>(driveControllerRightSideMotors));
    
    driveControllerLeftSideMotors.reset(new Talon(8));
    lw->AddActuator("DriveController", "Left Side Motors", std::static_pointer_cast<Talon>(driveControllerLeftSideMotors));
    
    driveControllerRobotDrive21.reset(new RobotDrive(driveControllerLeftSideMotors, driveControllerRightSideMotors));
    
    driveControllerRobotDrive21->SetSafetyEnabled(true);
        driveControllerRobotDrive21->SetExpiration(0.1);
        driveControllerRobotDrive21->SetSensitivity(0.5);
        driveControllerRobotDrive21->SetMaxOutput(1.0);

    launchControllerlowLimit.reset(new DigitalInput(0));
    lw->AddSensor("LaunchController", "lowLimit", launchControllerlowLimit);
    
    launchControllerWheelsTop.reset(new CANTalon(0));
    lw->AddActuator("LaunchController", "WheelsTop", launchControllerWheelsTop);
    
    launchControllerWheelsBot.reset(new CANTalon(1));
    lw->AddActuator("LaunchController", "WheelsBot", launchControllerWheelsBot);
    
    triggerControllertrigger.reset(new Relay(0, Relay::kBothDirections));
    lw->AddActuator("TriggerController", "trigger", triggerControllertrigger);
    
    pixyControllerPixyPan.reset(new Servo(2));
    lw->AddActuator("PixyController", "PixyPan", pixyControllerPixyPan);
    
    elevatorControllerWindowL.reset(new CANTalon(2));
    lw->AddActuator("ElevatorController", "Window L", elevatorControllerWindowL);
    
    elevatorControllerWindowR.reset(new CANTalon(3));
    lw->AddActuator("ElevatorController", "Window R", elevatorControllerWindowR);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
