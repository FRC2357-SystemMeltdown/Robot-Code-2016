// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef PIXYCONTROLLER_H
#define PIXYCONTROLLER_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "Pixy.h"
#include "PixyPacket.h"
#include "PIDController.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class PixyController: public Subsystem {

	Pixy pixy;
	PixyPacket pkt;
	double error = 0.0;
	const double ratio = 109/80;	//I assume this is the ratio of pixels to measured units at a set distance
	double objRatio = 0;

private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	PixyController();
	void InitDefaultCommand();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	//double autoCenter();
	void Update();
	void PixyReset();
	int GetBlockX();
	int GetBlockY();
	int GetBlockHeight();
	int GetBlockWidth();
	void SetServoPanAngle(double angle);
	float GetServoPanAngle();



	const double focalLength = 2.8; //2.8mm in inches
	float distanceToTarget = 0;

	std::shared_ptr<Servo> pixyPan;

};

#endif
